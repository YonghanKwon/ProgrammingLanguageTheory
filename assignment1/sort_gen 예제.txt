# Generator version of Quicksort
def sort_gen(lst):
	if not lst: return
	head, tail = lst[0], lst[1:]
	less = [v for v in tail if v < head]
	greater = [v for v in tail if v >= head]
	yield from sort_gen(less)
	yield head
	yield from sort_gen(greater)
data = [3,1,-5,7,-4,2,6,200,9,-2,4,3,0,-2]+[100]*100000
# Enumerate first 20 elements of the sorted list
for _, val  in zip(range(20), sort_gen(data)):
	print(val, end=" ")
# -5 -4 -2 -2 0 1 2 3 3 4 6 7 9 100 100 100 100 100 100 100
# Enumerate until sum of squares of sorted elements becomes >50
sum = 0
for val in sort_gen(data):
	sum += val*val
	if sum > 50:
		print('Sum =', sum)
		break
# Sum = 54